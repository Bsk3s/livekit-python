name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Code formatting check
      run: |
        black --check spiritual_voice_agent/ tests/
        isort --check-only spiritual_voice_agent/ tests/

    - name: Lint with flake8
      run: |
        flake8 spiritual_voice_agent/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 spiritual_voice_agent/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Type checking with mypy
      run: |
        mypy spiritual_voice_agent/ --ignore-missing-imports || true

    - name: Run tests
      run: |
        python -m pytest tests/ -v --tb=short

    - name: Run tests with coverage
      run: |
        python -m pytest --cov=spiritual_voice_agent --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella 